{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/val/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport Teddy from './img/cat-0.gif';\nimport Cat1 from './img/cat-1.jpg';\nimport Cat2 from './img/cat-2.jpg';\nimport Cat3 from './img/cat-3.jpg';\nimport Cat4 from './img/cat-4.jpg';\nimport Cat5 from './img/cat-5.jpg';\nimport YesCat from './img/cat-yes.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_IMAGES = 5;\nconst App = () => {\n  _s();\n  const [play, setPlay] = useState(true);\n  const [noCount, setNoCount] = useState(0);\n  const [title, setTitle] = useState(\"Pretty Onuoha Will You Be My Girlfriend?\");\n  const ImgData = [Teddy, Cat1, Cat2, Cat3, Cat4, Cat5, YesCat];\n  const [catImage, setCatImage] = useState(ImgData[noCount]);\n  const handleYesClick = () => {\n    updateStateAndImage(\"true, 5\");\n    setTitle(\"Yay!! I Love You\");\n  };\n  const handleNoClick = () => {\n    if (play) {\n      const newCount = Math.min(noCount + 1, MAX_IMAGES);\n      console.log(newCount);\n      setNoCount(newCount);\n      updateStateAndImage(generateMessage(newCount), false, newCount);\n    }\n  };\n  const updateStateAndImage = (hideButtons, imageIndex) => {\n    // setTitle(newTitle);\n    setButtonsHidden(hideButtons);\n    resizeYesButton();\n    updateNoButtonText(imageIndex);\n    ChangeImage(imageIndex);\n    console.log(imageIndex);\n    if (imageIndex === MAX_IMAGES) {\n      setPlay(false);\n    }\n  };\n  const resizeYesButton = () => {\n    const fontSize = parseFloat(window.getComputedStyle(yesButtonRef.current).fontSize);\n    yesButtonRef.current.style.fontSize = `${fontSize * 1.6}px`;\n  };\n  const generateMessage = count => {\n    const messages = [\"No\", \"Are you sure?\", \"Cupcake please\", \"Don't do this to me baby :(\", \"You're breaking my heart\", \"I'm gonna cry...\"];\n    return messages[Math.min(count, messages.length - 1)];\n  };\n  const updateNoButtonText = count => {\n    noButtonRef.current.innerHTML = generateMessage(count);\n  };\n  const ChangeImage = imageIndex => {\n    setCatImage(ImgData[imageIndex]);\n    setButtonsHidden(imageIndex === MAX_IMAGES); // Hide only the \"No\" button after the last image\n  };\n  const [buttonsHidden, setButtonsHidden] = useState(false);\n  const yesButtonRef = useRef();\n  const noButtonRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"cat-img\",\n      src: catImage,\n      alt: \"Picture of a cat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn--yes\",\n        onClick: handleYesClick,\n        ref: yesButtonRef,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `btn btn--no ${buttonsHidden ? 'hidden' : ''}`,\n        onClick: handleNoClick,\n        ref: noButtonRef,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"08xf4Ni4LtwWIfwBJg6ORfDRxuw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Teddy","Cat1","Cat2","Cat3","Cat4","Cat5","YesCat","jsxDEV","_jsxDEV","MAX_IMAGES","App","_s","play","setPlay","noCount","setNoCount","title","setTitle","ImgData","catImage","setCatImage","handleYesClick","updateStateAndImage","handleNoClick","newCount","Math","min","console","log","generateMessage","hideButtons","imageIndex","setButtonsHidden","resizeYesButton","updateNoButtonText","ChangeImage","fontSize","parseFloat","window","getComputedStyle","yesButtonRef","current","style","count","messages","length","noButtonRef","innerHTML","buttonsHidden","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","ref","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/val/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport Teddy from './img/cat-0.gif';\nimport Cat1 from './img/cat-1.jpg';\nimport Cat2 from './img/cat-2.jpg';\nimport Cat3 from './img/cat-3.jpg';\nimport Cat4 from './img/cat-4.jpg';\nimport Cat5 from './img/cat-5.jpg';\nimport YesCat from './img/cat-yes.jpg';\n\nconst MAX_IMAGES = 5;\n\nconst App = () => {\n  const [play, setPlay] = useState(true);\n  const [noCount, setNoCount] = useState(0);\n  const [title, setTitle] = useState(\"Pretty Onuoha Will You Be My Girlfriend?\")\n  const ImgData = [Teddy, Cat1, Cat2, Cat3, Cat4, Cat5, YesCat];\n\n  const [catImage, setCatImage] = useState(ImgData[noCount]);\n\n  const handleYesClick = () => {\n    updateStateAndImage(\"true, 5\");\n    setTitle(\"Yay!! I Love You\");\n  };\n\n  const handleNoClick = () => {\n    if (play) {\n      const newCount = Math.min(noCount + 1, MAX_IMAGES);\n      console.log(newCount);\n      setNoCount(newCount);\n      updateStateAndImage(generateMessage(newCount), false, newCount);\n    }\n  };\n\n  const updateStateAndImage = (hideButtons, imageIndex) => {\n    // setTitle(newTitle);\n    setButtonsHidden(hideButtons);\n    resizeYesButton();\n    updateNoButtonText(imageIndex);\n    ChangeImage(imageIndex);\n    console.log(imageIndex);\n    if (imageIndex === MAX_IMAGES) {\n      setPlay(false);\n    }\n  };\n\n  const resizeYesButton = () => {\n    const fontSize = parseFloat(window.getComputedStyle(yesButtonRef.current).fontSize);\n    yesButtonRef.current.style.fontSize = `${fontSize * 1.6}px`;\n  };\n\n  const generateMessage = (count) => {\n    const messages = [\n      \"No\",\n      \"Are you sure?\",\n      \"Cupcake please\",\n      \"Don't do this to me baby :(\",\n      \"You're breaking my heart\",\n      \"I'm gonna cry...\",\n    ];\n\n    return messages[Math.min(count, messages.length - 1)];\n  };\n\n  const updateNoButtonText = (count) => {\n    noButtonRef.current.innerHTML = generateMessage(count);\n  };\n\n  const ChangeImage = (imageIndex) => {\n    setCatImage(ImgData[imageIndex]);\n    setButtonsHidden(imageIndex === MAX_IMAGES); // Hide only the \"No\" button after the last image\n  };\n\n  const [buttonsHidden, setButtonsHidden] = useState(false);\n\n  const yesButtonRef = useRef();\n  const noButtonRef = useRef();\n\n  return (\n    <main className=\"container\">\n      <img className=\"cat-img\" src={catImage} alt=\"Picture of a cat\" />\n      <p className=\"title\">{title}</p>\n      <div>\n        <button type=\"button\" className=\"btn btn--yes\" onClick={handleYesClick} ref={yesButtonRef}>\n          Yes\n        </button>\n        <button type=\"button\" className={`btn btn--no ${buttonsHidden ? 'hidden' : ''}`} onClick={handleNoClick} ref={noButtonRef}>\n          No\n        </button>\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}